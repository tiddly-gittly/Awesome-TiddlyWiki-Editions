{"type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/tesseract/Action-JSONtid/Readme\": {\n            \"created\": \"20180218191355929\",\n            \"text\": \"! Introduction\\n\\nThe ''action-jsontid'' widget is an action widget that creates new tiddlers from a json tiddler. Action-jsontid is used within triggering widgets such as the ButtonWidget.\\n\\n\\n|!Attribute |!Description |\\n|$jsontid |The JSON tiddler containing data. This attribute is mandatory|\\n|$titleprop |The property whose value should be used as title of the created tiddlers. If not defined, defaults to \\\"title\\\". If tiddlers already exist with that title, numerical suffix is added sequentially |\\n|$initval |If defined, acts as the first number from which numerical suffix start |\",\n            \"title\": \"$:/plugins/tesseract/Action-JSONtid/Readme\",\n            \"tags\": \"\",\n            \"modified\": \"20180218191410765\"\n        },\n        \"$:/tesseract/modules/widgets/action-jsontid.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/tesseract/modules/widgets/action-jsontid.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nAction widget to create a new tiddler with a unique name and specified fields.\\n\\n\\\\*/\\n(function() {\\n\\n\\t/*jslint node: true, browser: true */\\n\\t/*global $tw: false */\\n\\t\\\"use strict\\\";\\n\\n\\tvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\n\\tvar JSONtidWidget = function(parseTreeNode, options) {\\n\\t\\tthis.initialise(parseTreeNode, options);\\n\\t};\\n\\n\\t/*\\n\\tInherit from the base widget class\\n\\t*/\\n\\tJSONtidWidget.prototype = new Widget();\\n\\n\\t/*\\n\\tRender this widget into the DOM\\n\\t*/\\n\\tJSONtidWidget.prototype.render = function(parent, nextSibling) {\\n\\t\\tthis.computeAttributes();\\n\\t\\tthis.execute();\\n\\t};\\n\\n\\t/*\\n\\tCompute the internal state of the widget\\n\\t*/\\n\\tJSONtidWidget.prototype.execute = function() {\\n\\t\\tthis.jsontiddlername = this.getAttribute(\\\"$jsontid\\\");\\n\\t\\tthis.initval = this.getAttribute(\\\"$initval\\\");\\n\\t\\tthis.titleprop = this.getAttribute(\\\"$titleprop\\\");\\n\\t};\\n\\n\\t/*\\n\\tRefresh the widget by ensuring our attributes are up to date\\n\\t*/\\n\\tJSONtidWidget.prototype.refresh = function(changedTiddlers) {\\n\\t\\tvar changedAttributes = this.computeAttributes();\\n\\t\\tif ($tw.utils.count(changedAttributes) > 0) {\\n\\t\\t\\tthis.refreshSelf();\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn this.refreshChildren(changedTiddlers);\\n\\t};\\n\\n\\n\\t/*\\n\\tInvoke the action associated with this widget\\n\\t*/\\n\\tJSONtidWidget.prototype.invokeAction = function(triggeringWidget, event) {\\n\\t\\tvar editAttributes = $tw.wiki.getTiddlerData(this.jsontiddlername, {});\\n\\n\\n\\t\\tvar title, fields = {};\\n\\n\\t\\tvar generateNewTitle = function(baseTitle, initval, options) {\\n\\t\\t\\toptions = options || {};\\n\\t\\t\\tvar c = initval,\\n\\t\\t\\t\\ttitle = baseTitle;\\n\\n\\t\\t\\tif (initval) {\\n\\t\\t\\t\\ttitle = baseTitle + \\\" \\\" + c;\\n\\t\\t\\t}\\n\\n\\t\\t\\twhile ($tw.wiki.tiddlerExists(title) || $tw.wiki.isShadowTiddler(title) || $tw.wiki.findDraft(title)) {\\n\\t\\t\\t\\tc = (((\\\"10\\\" + c) * 1 + 1) + \\\"\\\").replace(/^10?/, \\\"\\\");\\n\\t\\t\\t\\ttitle = baseTitle +\\n\\t\\t\\t\\t\\t(options.prefix || \\\" \\\") +\\n\\t\\t\\t\\t\\tc;\\n\\t\\t\\t}\\n\\t\\t\\treturn title;\\n\\t\\t};\\n\\n\\t\\tfor (var key in editAttributes) {\\n\\n\\t\\t\\tvar obj = editAttributes[key];\\n\\t\\t\\tfor (var prop in obj) {\\n\\t\\t\\t\\tif (!obj.hasOwnProperty(prop)) continue;\\n\\n\\t\\t\\t\\t$tw.utils.each(obj, function(attribute, name) {\\n\\t\\t\\t\\t\\tif (name.charAt(0) !== \\\"$\\\") {\\n\\t\\t\\t\\t\\t\\tfields[name] = attribute;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tvar titlefield = this.titleprop || \\\"title\\\";\\n\\t\\t\\t\\tif (prop == titlefield) {\\n\\t\\t\\t\\t\\ttitle = generateNewTitle(obj[prop], this.initval || \\\"\\\");\\n\\t\\t\\t\\t\\tvar tiddler = this.wiki.addTiddler(new $tw.Tiddler(fields, {\\n\\t\\t\\t\\t\\t\\ttitle: title\\n\\t\\t\\t\\t\\t}));\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn true; // Action was invoked\\n\\t};\\n\\n\\texports[\\\"action-jsontid\\\"] = JSONtidWidget;\\n\\n})();\",\n            \"bag\": \"default\",\n            \"revision\": \"2\",\n            \"type\": \"application/javascript\",\n            \"title\": \"$:/tesseract/modules/widgets/action-jsontid.js\",\n            \"tags\": \"\",\n            \"module-type\": \"widget\",\n            \"modified\": \"20180220004041103\",\n            \"created\": \"20180218121410759\"\n        }\n    }\n}","author":"Riz","created":"20180218191344823","description":"Action-JSONtid: Create tiddlers from JSON tiddlers","list":"Readme","modified":"20180218191347378","plugin-type":"plugin","title":"$:/plugins/tesseract/Action-JSONtid","version":"0.7.4","name":"Action-JSONtid"}