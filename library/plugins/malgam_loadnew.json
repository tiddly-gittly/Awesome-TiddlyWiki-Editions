{"type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/malgam/loadnew/loadnew.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/malgam/loadnew/loadnew.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to load new or modified tiddlers from a file\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n    name: \\\"loadnew\\\",\\n    synchronous: false\\n};\\n\\nvar Command = function(params,commander,callback) {\\n    this.params = params;\\n    this.commander = commander;\\n    this.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n    var self = this,\\n        fs = require(\\\"fs\\\"),\\n        path = require(\\\"path\\\");\\n    if(this.params.length < 1) {\\n        return \\\"Missing filename\\\";\\n    }\\n    var ext = path.extname(self.params[0]);\\n    fs.readFile(this.params[0],$tw.utils.getTypeEncoding(ext),function(err,data) {\\n        if (err) {\\n            self.callback(err);\\n        } else {\\n            var fields = {title: self.params[0]},\\n                type = path.extname(self.params[0]);\\n            var tiddlers = self.commander.wiki.deserializeTiddlers(type,data,fields);\\n            if(!tiddlers) {\\n                self.callback(\\\"No tiddlers found in file \\\\\\\"\\\" + self.params[0] + \\\"\\\\\\\"\\\");\\n            } else {\\n                for(var t=0; t<tiddlers.length; t++) {\\n                    var tid = new $tw.Tiddler(tiddlers[t]);\\n\\t\\t    var tidDate = tid.hasField(\\\"modified\\\") \\n\\t    \\t    \\t\\t? $tw.utils.formatDateString(tid.fields.modified,\\n                                  'YYYY0MM0DD0hh0mm0ss')\\n                                : \\\"\\\";\\n                    var existingTid = self.commander.wiki.getTiddler(tid.fields.title);\\n                    var existingTidDate = existingTid && existingTid.hasField(\\\"modified\\\") \\n                                        ? $tw.utils.formatDateString(existingTid.fields.modified,\\n                                          'YYYY0MM0DD0hh0mm0ss')\\n                                        : \\\"\\\";\\n                    if(!existingTid || tidDate > existingTidDate) {\\n                        $tw.wiki.addTiddler(tid);\\n                    }\\n                }\\n                self.callback(null);\\t\\n            }\\n        }\\n    });\\n    return null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\\n\",\n            \"title\": \"$:/plugins/malgam/loadnew/loadnew.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/plugins/malgam/loadnew/readme\": {\n            \"title\": \"$:/plugins/malgam/loadnew/readme\",\n            \"text\": \"! loadnew\\nA command to load new or modified tiddlers from a file.\\n\\nIt is based on the built-in \\\"load\\\" command except that it only loads new tiddlers or tiddlers with a later modification date than an existing tiddler with the same title.\\n\\n\"\n        },\n        \"$:/plugins/malgam/loadnew/usage\": {\n            \"title\": \"$:/plugins/malgam/loadnew/usage\",\n            \"text\": \"The \\\"loadnew\\\" command is used in the same way as the built-in \\\"load\\\" command.  It is executed from the command line when running a node.js instance of Tiddlywiki.  For example:\\n\\n```\\n$ tiddlywiki ./MyWiki --loadnew /Path/to/Tiddlywiki/file.html\\n```\\n\\nwill load all new or modified tiddlers from the Tiddlywiki file \\\"/Path/to/Tiddlywiki/file.html\\\" into the node.js Tiddlywiki instance \\\"./MyWiki\\\".\\n\\nFor more information on using Tiddlywiki with node.js refer to [[Using TiddlyWiki on Node.js|http://tiddlywiki.com/#Using%20TiddlyWiki%20on%20Node.js]]\\n\\nTo install this plugin, simply drag it's link from the ControlPanel/Plugins tab into your TW5 Tiddlywiki browser window.\\n\\nFor information in the \\\"load\\\" command, refer to [[LoadCommand|http://tiddlywiki.com/#LoadCommand]].\\n\"\n        }\n    }\n}","author":"Mal Gamble","core-version":">=5.1.14","dependents":"","description":"loadnew - an incremental load command","list":"readme usage","plugin-type":"plugin","source":"https://github.com/malgam/tw5-loadnew","title":"$:/plugins/malgam/loadnew","version":"0.0.2","name":"loadnew"}