{"title":"$:/plugins/inmysocks/StartupActions","description":"A daemon that will trigger actions when the wiki is opened or reloaded.","author":"inmysocks","version":"0.0.7","core-version":">=5.1.8","source":"https://github.com/inmysocks/TW5-StartupActions","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/inmysocks/StartupActions/startup-actions.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/inmysocks/StartupActions/startup-actions.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nStartup Actions Script thing\\n\\n\\\\*/\\n(function () {\\n\\n\\t/*jslint node: true, browser: true */\\n\\t/*global $tw: false */\\n\\t\\\"use strict\\\";\\n\\n\\t// Export name and synchronous status\\n\\texports.name = \\\"startup-actions\\\";\\n\\texports.platforms = [\\\"browser\\\"];\\n\\texports.after = [\\\"rootwidget\\\"];\\n\\texports.synchronous = true;\\n\\n\\texports.startup = function() {\\n\\t\\t// Do all actions on startup.\\n\\t\\tvar tiddlersFilter = \\\"[tag[$:/tags/StartupAction]!has[draft.of]]\\\";\\n\\t\\tvar expressionTiddlerList = $tw.wiki.filterTiddlers(tiddlersFilter);\\n\\t\\tif(expressionTiddlerList.length !== 0) {\\n\\t\\t\\tfor (var j = 0; j < expressionTiddlerList.length; j++) {\\n\\t\\t\\t\\tvar expressionTiddler = $tw.wiki.getTiddler(expressionTiddlerList[j]);\\n\\t\\t\\t\\tif(expressionTiddler) {\\n\\t\\t\\t\\t\\tevaluateExpression(expressionTiddler);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\t// This should be simple, it just takes each expression tiddler and triggers all of the action widgets in its text field.\\n\\tfunction evaluateExpression(expressionTiddler) {\\n\\t\\tif(expressionTiddler) {\\n\\t\\t\\t// Import all the variables because the widget isn't part of the main tiddlywiki stuff so the global macros and similar things aren't loaded by default.\\n\\t\\t\\tvar stringPassed = \\\"<$importvariables filter='[[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]] [[\\\" + expressionTiddler.getFieldString(\\\"title\\\") + \\\"]]'>\\\"+expressionTiddler.getFieldString(\\\"text\\\")+\\\"</$importvariables>\\\";\\n\\t\\t\\tvar parsed = $tw.wiki.parseText(\\\"text/vnd.tiddlywiki\\\", stringPassed, {});\\n\\t\\t\\tvar widgets = $tw.wiki.makeWidget(parsed, {parentWidget:$tw.rootWidget});\\n\\t\\t\\tvar container = $tw.fakeDocument.createElement(\\\"div\\\");\\n\\n\\t\\t\\t// If a filter is given for the action tiddlers do the actions in each returned tiddler.\\n\\t\\t\\tif(expressionTiddler.getFieldString(\\\"action_filter\\\")) {\\n\\t\\t\\t\\tvar actionTiddlerList = $tw.wiki.filterTiddlers(expressionTiddler.getFieldString(\\\"action_filter\\\"));\\n\\t\\t\\t\\tfor (var k = 0; k < actionTiddlerList.length; k++) {\\n\\t\\t\\t\\t\\tperformAction(actionTiddlerList[k], widgets, container);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// If no filter for the action tiddlers is given just evaluate the expressions.\\n\\t\\t\\t\\tvar expressionTiddlerTitle = expressionTiddler.getFieldString(\\\"title\\\");\\n\\t\\t\\t\\tperformAction(expressionTiddlerTitle, widgets, container);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Invoke the action(s).\\n\\tfunction performAction(tiddler, widgets, container) {\\n\\t\\twidgets.setVariable(\\\"currentTiddler\\\", tiddler);\\n\\t\\twidgets.render(container, null);\\n\\t\\tif(widgets) {\\n\\t\\t\\twidgets.invokeActions({});\\n\\t\\t}\\n\\t}\\n\\n})();\",\n            \"title\": \"$:/plugins/inmysocks/StartupActions/startup-actions.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        }\n    }\n}","name":"StartupActions"}