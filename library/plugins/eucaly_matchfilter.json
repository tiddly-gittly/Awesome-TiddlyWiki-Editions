{"type":"application/json","text":"{\"tiddlers\":{\"$:/core/modules/filters/match.js\":{\"created\":\"20140910160610492\",\"creator\":\"EucalyJ\",\"modified\":\"20140910161755292\",\"modifier\":\"EucalyJ\",\"module-type\":\"filteroperator\",\"tags\":\"$:/_matchfilter $:/_macros\",\"title\":\"$:/core/modules/filters/match.js\",\"type\":\"application/javascript\",\"text\":\"/*\\\\\\ntitle: $:/core/modules/filters/match.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returns matching text by regular expression\\n\\n\\\\*/\\n(function(){\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n/*\\nExport our filter function\\n*/\\nexports.match = function(source,operator,options) {\\nvar results = [],\\nfieldname = (operator.suffix || \\\"title\\\").toLowerCase(),\\nregexpString, regexp, flags = \\\"\\\", match,\\ngetFieldString = function(tiddler,title) {\\nif(tiddler) {\\nreturn tiddler.getFieldString(fieldname);\\n} else if(fieldname === \\\"title\\\") {\\nreturn title;\\n} else {\\nreturn null;\\n}\\n};\\n// Process flags and construct regexp\\nregexpString = operator.operand;\\nmatch = /^\\\\(\\\\?([gim]+)\\\\)/.exec(regexpString);\\nif(match) {\\nflags = match[1];\\nregexpString = regexpString.substr(match[0].length);\\n} else {\\nmatch = /\\\\(\\\\?([gim]+)\\\\)$/.exec(regexpString);\\nif(match) {\\nflags = match[1];\\nregexpString = regexpString.substr(0,regexpString.length - match[0].length);\\n}\\n}\\nregexp = new RegExp(regexpString,flags);\\n// Process the incoming tiddlers\\nif(operator.prefix === \\\"!\\\") {\\nsource(function(tiddler,title) {\\nvar text = getFieldString(tiddler,title);\\nif(text !== null) {\\nif(!regexp.exec(text)) {\\nresults.push(title);\\n}\\n}\\n});\\n} else {\\nsource(function(tiddler,title) {\\nvar text = getFieldString(tiddler,title);\\nif(text !== null) {\\n// // ==== start of modification 20140911\\nvar matches = [],\\n\\texecresult = regexp.exec(text);\\nwhile(execresult) {\\n     if(execresult.length > 1) { // there were brackets\\n          matches= matches.concat(execresult.slice(1));\\n     }\\n     else { // no brackets - take the full match\\n          matches.push(execresult[0]);\\n     }\\n     if(regexp.lastIndex === 0) { // no g-switch\\n          break;\\n     }\\n     execresult = regexp.exec(text);\\n}\\t\\t\\t\\t\\t\\nif(matches) {\\n    $tw.utils.pushTop(results,matches);\\n}\\n// \\\\\\\\ ==== end of modification 20140911\\n}\\n});\\n}\\nreturn results;\\n};\\n})();\"},\"$:/plugins/eucaly/matchfilter/doc/codeTemplate\":{\"caption\":\"Example 1\",\"created\":\"20140910225320535\",\"creator\":\"EucalyJ\",\"modified\":\"20140910225634729\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_macros\",\"title\":\"$:/plugins/eucaly/matchfilter/doc/codeTemplate\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<pre><$view field=\\\"text\\\"/></pre>\"},\"$:/plugins/eucaly/matchfilter/doc/example1-code\":{\"caption\":\"Example 1\",\"created\":\"20140910224532208\",\"creator\":\"EucalyJ\",\"modified\":\"20140913003715694\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_readme $:/_toc_exclude\",\"title\":\"$:/plugins/eucaly/matchfilter/doc/example1-code\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define regex-feature-header() (^!+\\\\s*feature.*$(?:\\\\s+[^!\\\\s].*)*)(?gmi)\\n\\n<$list filter=\\\"[all[shadows+tiddlers]suffix[/readme]regexp:text[^!+\\\\s*feature(?mi)]!has[draft.of]]\\\"><div>\\n\\n\\t!!<$link to={{!!title}}>\\n\\t\\t<$list filter=\\\"[{!!title}removesuffix[/readme]]\\\">\\n\\t\\t\\t{{!!title}}\\n\\t\\t</$list>\\n\\t</$link>\\n\\t<$list filter='[{!!title}match:text<regex-feature-header>]'>\\n\\n\\t\\t{{!!title}}\\n\\t</$list>\\n</div><br/></$list>\"},\"$:/plugins/eucaly/matchfilter/doc/example1\":{\"caption\":\"Example 1\",\"created\":\"20140910161917083\",\"creator\":\"EucalyJ\",\"modified\":\"20140910230101562\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_readme\",\"title\":\"$:/plugins/eucaly/matchfilter/doc/example1\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define example-without-html(src)\\nCode:\\n\\n{{$src$||$:/plugins/eucaly/matchfilter/doc/codeTemplate}}\\n\\nRenders as:\\n\\n<<<\\n{{$src$}}\\n<<<\\n\\\\end\\n\\n<$importvariables filter=\\\"$:/plugins/eucaly/matchfilter/doc/example1-code\\\">\\n\\n!!! Example 1\\n\\nBelow example transcludes tiddler's `!Feature` ''header sections'' by ''regular expression''\\n<pre><<regex-feature-header>></pre>\\n\\n<<example-without-html $:/plugins/eucaly/matchfilter/doc/example1-code>>\\n</$importvariables>\"},\"$:/plugins/eucaly/matchfilter/doc/example2\":{\"caption\":\"Example 2\",\"created\":\"20140910162457640\",\"creator\":\"EucalyJ\",\"modified\":\"20140913003823625\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_readme\",\"title\":\"$:/plugins/eucaly/matchfilter/doc/example2\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define example-without-html(src)\\nCode:\\n\\n```\\n$src$\\n```\\n\\nRenders as:\\n\\n<<<\\n$src$\\n<<<\\n\\\\end\\n\\n!!! Example 2\\n\\nBelow example transcludes tiddler's `!` ''header'' (TOC hierarchy)<br/> by ''regular expression'' `(^!+.*$)(?gmi)`\\n\\n<<example-without-html \\\"\\\"\\\"<$list filter=\\\"[all[shadows+tiddlers]prefix[$:/plugins/eucaly/]regexp:title[readme]!has[draft.of]]\\\"><div>\\n\\n\\t!!<$link to={{!!title}}>\\n\\t\\t<$list filter=\\\"[{!!title}removesuffix[/readme]]\\\">\\n\\t\\t\\t{{!!title}}\\n\\t\\t</$list>\\n\\t</$link>\\n\\t<$list filter='[{!!title}match:text[(^!+.*$)(?gmi)]]'>\\n\\n\\t\\t{{!!title}}\\n\\t</$list>\\n</div><br/></$list>\\n\\\"\\\"\\\">>\"},\"$:/plugins/eucaly/matchfilter/history\":{\"caption\":\"History\",\"created\":\"20140910230737054\",\"creator\":\"EucalyJ\",\"lastupdate\":\"20140913\",\"modified\":\"20140913112453511\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_readme\",\"title\":\"$:/plugins/eucaly/matchfilter/history\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!!!Background\\n\\nAs inspired by below threads and resource:\\n\\n* [[[TW5] Transcluding tiddler sections by Headings|https://groups.google.com/forum/#!topic/tiddlywiki/cPt3tjplEAM]]\\n* [[[TW5] 2 new list operators/functions|https://groups.google.com/forum/#!topic/tiddlywikidev/pAapOxpXXTE]]\\n* [[Idea for a footnote filter|http://tiddlystuff.tiddlyspot.com/#Idea%20for%20a%20footnote%20filter]] (tiddlystuff)\\n\\nThe previous ''~MatchFilter'' is adopted from Stephan Hradek's version (tiddlystuff) to be reloaded for 5.0.15-beta `(and above ??)`. That release (2014-08-23) is available at [[TiddlyWikiDev Forum|https://groups.google.com/forum/#!topic/tiddlywikidev/4ciJxJVAsY8]].\\n\\n!!!History\\n* 20140912 / ''0.1.0'' ( 8.4K / 2.1K )\\n** Following the ''regexp filter'' (new in 5.0.17-beta).\\n \\n<hr/>\\nVersion before 5.0.16-beta\\n\\n* 20140906 / ''0.0.1'' ( 7.2K / * )\\n** build plugin package (for documentation only, no core *.js change)\\n* 20140823 ( 2.3K ) -- posted at [[TiddlyWikiDev Forum|https://groups.google.com/forum/#!topic/tiddlywikidev/4ciJxJVAsY8]]\\n** The behavior of `!match` was not implemented yet\\n\"},\"$:/plugins/eucaly/matchfilter/readme\":{\"caption\":\"~MatchFilter\",\"created\":\"20140910222842467\",\"creator\":\"EucalyJ\",\"lastupdate\":\"20140912\",\"modified\":\"20140913003943768\",\"modifier\":\"EucalyJ\",\"tags\":\"$:/_matchfilter $:/_readme\",\"title\":\"$:/plugins/eucaly/matchfilter/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!![[MatchFilter|$:/plugins/eucaly/matchfilter/readme]]\\n\\nThe MatchFilter returns ''matching text'' by regular expression (instead of //__a list of the tiddlers__ from [[FieldFilter|http://tiddlywiki.com/#FilterOperator%3A%20field]]// or ''regexp filter'')\\n\\n!!!Features\\n# Transclude tiddler sections (picking parts out of fields) by regular expressions\\n\\n!!!Usage\\n# Follow the ''regexp filter'' (new in 5.0.17-beta), the MatchFilter comes with the syntax `match:fieldName[regexp(?modifier)]`. Because the support for regular expression filter operands `/regexp/(modifier)` might be removed after a while.\\n# Note that the filter syntax doesn't allow you to directly enter regular expressions that include square brackets `[` `]` . Instead, you would have to use an indirect field from a variable. Please see the example.\\n\\n!!!Install\\n* Drag&Drop (essestial module only) -- [[$:/core/modules/filters/match.js]], or\\n* Drag&Drop (with documentation) -- [[$:/plugins/eucaly/matchfilter]]\\n\\n!!!Resources\\n* Test by ''Filter tab'' of [[AdvancedSearch|$:/AdvancedSearch]] within ~TiddlyWiki\\n* Experiment and learning at [[regexr.com|http://www.regexr.com/]]\\n\\n!!!Examples\\n<<tabs \\\"[all[shadows+tiddlers]tag[$:/_readme]tag[$:/_matchfilter]!tag[$:/_toc_exclude]!regexp:title[readme(?i)]!has[draft.of]sort[]]\\\" \\\"\\\" \\\"\\\" \\\"tc-vertical\\\">>\"}}}","author":"EucalyJ","created":"20140911212249587","creator":"EucalyJ","description":"MatchFilter - returns \"matching text\" by regular expression","lastupdate":"20140912","list":"readme history","modified":"20140911212252541","modifier":"EucalyJ","plugin-type":"plugin","source":"http://eucaly-tw5.tiddlyspot.com/","tags":"$:/_matchfilter $:/_plugin-package","title":"$:/plugins/eucaly/matchfilter","version":"0.1.0","name":"matchfilter"}